Eventually write these modules together into the same process as the iso gen

Write a module that performs the following functions:
    1. Find a password generator API and call it for a new root password
    2. Pass this password into something like the following python to obtain a hash+salt of the password
        A. 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'
    3. Open ks.cfg for writing and pattern match "rootpw --iscrypted "
    4. Write the encrypted password here and save the file
    5. Display the unencrypted password in terminal for documentation and usage

### Functions for Guided setup ###
### This will be another bootloader option pointing to a different ks file.
### This new ks file will have a different "include-files.sh" which will handle input for guided installation

Write a module that performs the following functions:
    Prompt for hostname
    Prompt for username
    Prompt for password
    Prompt for IP
    Prompt for ssh key
        parse raw vs https(github key) and add appropriately
        /bin/echo -e '{var}' > /home/{userthatisinput}/.ssh/authorized_keys
### END Functions for Guided setup ###

Fix banner to be dynamically aligned with text length on first logon

Add quickstart oneliner in README.md (curl, chmod, bash for generation)

Add a for loop to docker compose up -d each yaml in the yaml directory (This will also allow descriptive compose file names)

Add support for wireless connectivity

Write something to gather all bilge tools and execute them per 'selection'