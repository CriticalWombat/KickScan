#version=RHEL8

url --noverifyssl --url=https://download.rockylinux.org/pub/rocky/9/BaseOS/x86_64/kickstart/
lang en_US.UTF-8
keyboard us
rootpw --lock
firewall --disabled
selinux --permissive
timezone America/Kentucky/Louisville
text
skipx

# Installation destination options
zerombr
clearpart --all --initlabel --drives=sda
ignoredisk --only-use=sda
autopart --type=lvm

firstboot --disabled
eula --agreed
services --enabled=NetworkManager,sshd

repo --name="BaseOS" --baseurl=http://dl.rockylinux.org/pub/rocky/9/BaseOS/\$basearch/os/ --cost=200
repo --name="AppStream" --baseurl=http://dl.rockylinux.org/pub/rocky/9/AppStream/\$basearch/os/ --cost=200
repo --name="CRB" --baseurl=http://dl.rockylinux.org/pub/rocky/9/CRB/\$basearch/os/ --cost=200
repo --name="extras" --baseurl=http://dl.rockylinux.org/pub/rocky/9/extras/\$basearch/os --cost=200

%pre --interpreter=/bin/bash
HOSTNAME_PREFIX="Bilge"
ID=$(cat /proc/sys/kernel/random/uuid | cut -d "-" -f 3)
HOSTNAME="${HOSTNAME_PREFIX}-${ID}"
echo "network --bootproto=dhcp --hostname=${HOSTNAME}" > /tmp/host-include.ks

URL="https://usernameapiv1.vercel.app/api/random-usernames"
response=$(curl -s -w "%{http_code}" -o /tmp/username.json $URL)
if [ "${response: -3}" == "200" ]; then
    json=$(cat /tmp/username.json)
    unfiltered_username=$(echo "$json" | grep -oP '"usernames":\["\K[^"]+')
    username=${unfiltered_username%_}
else
    username="user-${ID}"
fi
password=$(tr -dc 'A-Za-z0-9!?%=' < /dev/urandom | head -c 10)
echo "${username}" > /tmp/username
echo "${password}" > /tmp/password

echo "user --name=${username} --password=${password} --plaintext" > /tmp/user-include.ks

%end

# Includes the following dynamically generated lines above in the %pre scripting
%include /tmp/host-include.ks
%include /tmp/user-include.ks

%packages --ignoremissing --excludedocs
# Specify necessary packages here
%end

%post --nochroot --interpreter=/bin/bash
# Read the stored variables from the live environment's /tmp
username=$(cat /tmp/username)
password=$(cat /tmp/password)

# Switch to the chrooted environment for target system configuration
chroot /mnt/sysimage /bin/bash <<EOF
authselect select minimal --force

bilgeSource="https://raw.githubusercontent.com/CriticalWombat/KickScan/dev"
postInstallScripts=("banner_config.sh" "user_config.sh" "package_ops.sh" "housekeeping.sh" "packageManager.sh")
destinationDir="/tmp"

for script in "${postInstallScripts[@]}"; do
    # Download the script
    curl --http1.1 -o "${destinationDir}/${script}" "${bilgeSource}/post-install-scripts/${script}"
    # Make it executable
    chmod +x "${destinationDir}/${script}"
    # Make user the owner of all post install scripts
    chown "${username}":"${username}" "${destinationDir}/${script}"
done

### Execute post installation scripts. <-- Watch for permission issues with this recent change.-->
# Configure banner with first time logon credentials
"${destinationDir}/banner_config.sh" "${username}" "${password}"
# Configure user options (Groups, permissions, ssh keys, etc..)
"${destinationDir}/user_config.sh" "${username}"
# Install any necessary packages
"${destinationDir}/package_ops.sh"
# Move script out of tmp to wait for user first time logon to be triggered via bashrc.
mv "${destinationDir}/housekeeping.sh" /usr/local/bin/housekeeping.sh

### Call packageManager.sh which will be the future package handler. This will be what reflects inputs of desired bilgetools into the selections and run commands for each.
"${destinationDir}/packageManager.sh"

# Suppress kernel messages to console
echo 'kernel.printk = 3 4 1 3' >> /etc/sysctl.conf
sysctl -p

# Reboot after Kickstart to complete initial setup
reboot

EOF

%end

