url --noverifyssl --url=https://download.rockylinux.org/pub/rocky/9/BaseOS/x86_64/kickstart/
lang en_US.UTF-8
keyboard us
rootpw --lock
firewall --disabled
selinux --permissive
timezone America/Kentucky/Louisville
text
skipx

# Installation destination options
zerombr
clearpart --all --initlabel --drives=sda
ignoredisk --only-use=sda
autopart --type=lvm

firstboot --disabled
eula --agreed
services --enabled=NetworkManager,sshd

repo --name="BaseOS" --baseurl=http://dl.rockylinux.org/pub/rocky/9/BaseOS/\$basearch/os/ --cost=200
repo --name="AppStream" --baseurl=http://dl.rockylinux.org/pub/rocky/9/AppStream/\$basearch/os/ --cost=200
repo --name="CRB" --baseurl=http://dl.rockylinux.org/pub/rocky/9/CRB/\$basearch/os/ --cost=200
repo --name="extras" --baseurl=http://dl.rockylinux.org/pub/rocky/9/extras/\$basearch/os --cost=200

%pre --interpreter=/bin/bash
yum install -y words

HOSTNAME_PREFIX="Scanner"
ID=$(cat /proc/sys/kernel/random/uuid | cut -d "-" -f 3)
HOSTNAME="${HOSTNAME_PREFIX}-${ID}"
echo "network --bootproto=dhcp --hostname=${HOSTNAME}" > /tmp/host-include.ks

WORDLIST="/usr/share/dict/words"
if [ -f "$WORDLIST" ]; then
    word1=$(shuf -n 1 $WORDLIST | tr -d '[:space:]')
    word2=$(shuf -n 1 $WORDLIST | tr -d '[:space:]')
    username="${word1}_${word2}_${ID}"
else
    username="scanner-${ID}"
fi
password=$(tr -dc 'A-Za-z0-9!?%=' < /dev/urandom | head -c 10)
echo "${username}" > /tmp/username
echo "${password}" > /tmp/password

echo "user --name=${username} --password=${password} --plaintext" > /tmp/user-include.ks

%end

# Includes the following dynamically generated lines above in the %pre scripting
%include /tmp/host-include.ks
%include /tmp/user-include.ks

%packages --ignoremissing --excludedocs
# Specify necessary packages here
%end

%post --nochroot --interpreter=/bin/bash
# Read the stored variables from the live environment's /tmp
username=$(cat /tmp/username)
password=$(cat /tmp/password)

# Switch to the installed environment for target system configuration
chroot /mnt/sysimage /bin/bash <<EOF
authselect select minimal --force

### Configure first login banner with credentials
cat <<BANNER > /etc/issue
Welcome to your new system!

Generated credentials:

Username: ${username}
Password: ${password}

NOTE: Credentials will not be displayed again!
Please change your password upon first login.
BANNER

# Create script to clear the issue after first login
cat <<'CLEAR_SCRIPT' > /etc/profile.d/clear_issue.sh
#!/bin/bash
if [ -f /etc/issue ]; then
    sudo rm -f /etc/issue
    sudo rm -f /etc/profile.d/clear_issue.sh
fi
CLEAR_SCRIPT
chmod +x /etc/profile.d/clear_issue.sh

# Suppress kernel messages to console
echo 'kernel.printk = 3 4 1 3' >> /etc/sysctl.conf
sysctl -p

# Make a script folder and put setup scripts in for various items used often
# In future, this can be its own repo and will just be cloned

mkdir /opt/installation_scripts

curl -o /opt/installation_scripts/install_docker.sh https://raw.githubusercontent.com/CriticalWombat/KickScan/refs/heads/MinimalGreenBone/post-install-scripts/Stand-Alone/Dockersetup.sh
curl -o /opt/installation_scripts/install_Greenbone.sh https://raw.githubusercontent.com/CriticalWombat/KickScan/refs/heads/MinimalGreenBone/post-install-scripts/Stand-Alone/Greenbonesetup.sh
 
# Reboot after Kickstart to complete initial setup
reboot

EOF

%end
