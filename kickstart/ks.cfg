#version=RHEL8

url --noverifyssl --url=https://download.rockylinux.org/pub/rocky/9/BaseOS/x86_64/kickstart/
lang en_US.UTF-8
keyboard us
rootpw --lock
firewall --disabled
selinux --permissive
timezone America/Kentucky/Louisville
text
skipx

# Installation destination options
zerombr
clearpart --all --initlabel --drives=sda
ignoredisk --only-use=sda
autopart --type=lvm

firstboot --disabled
eula --agreed
services --enabled=NetworkManager,sshd

repo --name="BaseOS" --baseurl=http://dl.rockylinux.org/pub/rocky/9/BaseOS/\$basearch/os/ --cost=200
repo --name="AppStream" --baseurl=http://dl.rockylinux.org/pub/rocky/9/AppStream/\$basearch/os/ --cost=200
repo --name="CRB" --baseurl=http://dl.rockylinux.org/pub/rocky/9/CRB/\$basearch/os/ --cost=200
repo --name="extras" --baseurl=http://dl.rockylinux.org/pub/rocky/9/extras/\$basearch/os --cost=200

%pre --interpreter=/bin/bash
# Generate a dynamic hostname and save it to the target system's filesystem
HOSTNAME_PREFIX="Scanner"
ID=$(cat /proc/sys/kernel/random/uuid | cut -d "-" -f 3)
HOSTNAME="${HOSTNAME_PREFIX}-${ID}"
echo"network --bootproto=dhcp --hostname=${HOSTNAME}" > /mnt/sysimage/tmp/host-include.ks

# URL to fetch the username
URL="https://usernameapiv1.vercel.app/api/random-usernames"
response=$(curl -s -w "%{http_code}" -o /mnt/sysimage/tmp/username.json $URL)
if [ "${response: -3}" == "200" ]; then
    json=$(cat /mnt/sysimage/tmp/username.json)
    username=$(echo$json | grep -oP '"usernames":\["\K[^"]+')
    clean_username=${username%_}
else
    clean_username="user-${ID}"
fi
password=$(tr -dc 'A-Za-z0-9!?%=' < /dev/urandom | head -c 10)

echo"${clean_username}" > /mnt/sysimage/tmp/clean_username
echo"${password}" > /mnt/sysimage/tmp/password
echo"user --name=${clean_username} --password=${password} --plaintext" > /mnt/sysimage/tmp/user-include.ks

%end

%include /tmp/host-include.ks
%include /tmp/user-include.ks

%packages --ignoremissing --excludedocs
# Specify necessary packages here
%end

%post --interpreter=/bin/bash
# Read the stored variables from the target system's filesystem
clean_username=$(cat /tmp/clean_username)
password=$(cat /tmp/password)

authselect select minimal --force
curl --http1.1 -o /tmp/config.sh https://raw.githubusercontent.com/CriticalWombat/KickScan/dev/post-install-scripts/config.sh

ip_address=$(hostname -I | awk '{print $1}')
chmod 755 /tmp/config.sh
/tmp/config.sh ${clean_username} ${password} ${ip_address}
curl --http1.1 -o /usr/local/bin/first_time_logon.sh https://raw.githubusercontent.com/CriticalWombat/KickScan/dev/post-install-scripts/first_time_logon.sh
chmod +x /usr/local/bin/first_time_logon.sh

cat <<EOF >> /home/${clean_username}/.bashrc
if [ ! -f "/home/${clean_username}/.first-logon-done" ]; then
    sudo touch "/home/${clean_username}/.first-logon-done"
    /usr/local/bin/first_time_logon.sh ${clean_username} ${ip_address}
fi
EOF

curl --http1.1 -o /usr/local/bin/user_config.sh https://raw.githubusercontent.com/CriticalWombat/KickScan/dev/post-install-scripts/user_config.sh
chmod +x /usr/local/bin/user_config.sh
/usr/local/bin/user_config.sh ${clean_username}

# Suppress kernel messages to console
echo'kernel.printk = 3 4 1 3' >> /etc/sysctl.conf
sysctl -p
%end

# Remind to remove installation media prior to reboot
clear
echo""echo"INSTALLATION COMPLETED!"
echo""
echo""
echo"PLEASE REMOVE INSTALLATION MEDIA AND PRESS ANY KEY TO REBOOT"
echo""read -n 1 -s

# Reboot after Kickstart to complete initial setup
reboot
